[[snippets]]
  description = "curl: use curl to download file as remote name (-O) with relocate enabled (-L)"
  command = "curl -LO https:xxxx0.7.1.zip"
  tag = ["curl"]
  output = ""

[[snippets]]
  description = "rg: to find one or more 'fastXXX' in particular file as how in command ex"
  command = "rg 'fast\\w+' README.md"
  tag = ["rg"]
  output = ""

[[snippets]]
  description = "rg: to find function recursive from current folder"
  command = "rg 'fn write\\('"
  tag = ["rg"]
  output = ""

[[snippets]]
  description = "tar and zip current path"
  command = "tar -czvf data.tar.gz ./"
  tag = ["tar"]
  output = ""

[[snippets]]
  description = "untar and unzip to current path"
  command = "tar -xzvf data.tar.gz"
  tag = ["tar"]
  output = ""

[[snippets]]
  description = "curl: Get my public ip addr"
  command = "curl ifconfig.co"
  output = ""

[[snippets]]
  description = "get private ip (using en5)"
  command = "ipconfig getifaddr en5"
  output = ""

[[snippets]]
  description = "get network info"
  command = "ifconfig en5"
  output = ""

[[snippets]]
  description = "get routing table with peco(filter)"
  command = "netstat -nr | peco"
  output = ""

[[snippets]]
  description = "info on sockets"
  command = "netstat -a"
  output = ""

[[snippets]]
  description = "trace the path packet in debug mode"
  command = "traceroute -d google.com"
  output = ""

[[snippets]]
  description = "establish a network connection to google.com in verbose mode on port 80"
  command = "nc -v google.com 80"
  output = ""

[[snippets]]
  description = "setup a network listener on port 2196 for testing"
  command = "nc -l 2196"
  output = ""

[[snippets]]
  description = "capture all packets for a given port going to a given destination"
  command = "sudo tcpdump -nnvvXs 80 dst 172.217.163.46"
  output = ""

[[snippets]]
  description = "capture packets as above but dump to a pcap file"
  command = "sudo tcpdump -nnvvXs 80 dst 172.217.163.46 -w /tmp/demo.pcap"
  output = ""

[[snippets]]
  description = "show listenning port"
  command = "lsof -iTCP -sTCP:LISTEN -P -n"
  output = ""

[[snippets]]
  description = "to edit git global config"
  command = "git config --global --edit"
  output = ""

[[snippets]]
  description = "pg docker run up a postgres container"
  command = "docker run -itd -e POSTGRES_USER=re4388 -e POSTGRES_PASSWORD=2aoxjgju -p 5499:5432 -v '$PWD/data':/var/lib/postgresql/data --name postgresV0 postgres:latest"
  output = ""

[[snippets]]
  description = "pg docker exec go inside container"
  command = "docker exec -it postgresV0 bash"
  output = ""

[[snippets]]
  description = "pg: create a quick table named t1"
  command = "create table t1 (pid serial primary key, name text, price float);"
  output = ""

[[snippets]]
  description = "pg: insert into t1 table"
  command = "insert into t1 (name, price) values('apple', 12.2);"
  output = ""

[[snippets]]
  description = "pg: begin tx"
  command = "begin transaction isolation level <repeatable read | serializable>;"
  output = ""

[[snippets]]
  description = "get line of code"
  command = "find . -type f | xargs wc -w | tail -1"
  output = ""

[[snippets]]
  description = "找出目前路徑之下的所有 .txt2 檔案，並且將其刪除, -p 可以先確認再執行"
  command = "find . -name \"*.txt2\" | xargs -p rm -f"
  output = ""

[[snippets]]
  description = "要在所有的 .txt 檔案中搜尋 ben 這個字串"
  command = "find . -name '*.txt' | xargs grep 'ben'"
  output = ""

[[snippets]]
  description = "psql login into hermes-qat w/ password"
  command = "psql -h 34.80.181.225  -p 5432 -d hermes-qat -U qat -W 1qaz@WSX"
  output = ""

[[snippets]]
  description = "curl: set proxy"
  command = "curl --proxy https://127.0.0.1:8080 \"http://wttr.in/Taipei?0\""
  output = ""

[[snippets]]
  description = "mitmproxy intercept: `~u` is regex,  `~q` is request, use `i` to trigger command prompt"
  command = "[i:~u /Taipei & ~q]"
  output = ""

[[snippets]]
  description = "run mitmproxy with sslkeylog file"
  command = "MITMPROXY_SSLKEYLOGFILE=\"~/sslkeylogfile.txt\" mitmproxy"
  output = ""

[[snippets]]
  description = "mitmdump with script/addon"
  command = "mitmdump -s ~/project/personal/mitmproxy-addon/anatomy.py"
  output = ""

[[snippets]]
  description = "查詢特定 port 的 service"
  command = "lsof -n -i:8080 | grep LISTEN"
  output = ""

[[snippets]]
  description = "git stash include newly added file"
  command = "git stash --include-untracked"
  output = ""

[[snippets]]
  description = "wemo: npm run test watch"
  command = "npm run test:watch flashSignal"
  output = ""

[[snippets]]
  description = "conda create"
  command = "conda create --name myenv python=3.10 -y"
  output = ""

[[snippets]]
  description = "history get from field 4 to last (will remove the history pid)"
  command = "history -20 | cut -d ' ' -f 4-"
  output = ""

[[snippets]]
  description = "npm check global package"
  command = "npm list -g --depth=0"
  output = ""

[[snippets]]
  description = "cut get first field (-f1) for input file"
  command = "cut -d: -f1 < /etc/passwd"
  output = ""

[[snippets]]
  description = "conda install forge"
  command = "conda install -c conda-forge <package>"
  output = ""

[[snippets]]
  description = "conda run mimtdump"
  command = "conda run --no-capture-output mitmdump -s write_into_file.py"
  output = ""

[[snippets]]
  description = "measure zsh startup time"
  command = "time  zsh -i -c exit"
  output = ""

[[snippets]]
  description = "jq - get all ids from an array response"
  command = "curl https://jsonplaceholder.typicode.com/comments | jq '. [].id'"
  output = ""

[[snippets]]
  description = "jq - get value from a key (response is just an objec)t"
  command = "curl https://jsonplaceholder.typicode.com/posts/1 | jq '.body'"
  output = ""

[[snippets]]
  description = "jq - get nested key from an array of object"
  command = "curl https://jsonplaceholder.typicode.com/users | jq '. [].address.street'"
  output = ""

[[snippets]]
  description = "pm2 cronjob"
  command = "pm2 start /Users/re4388/project/personal/experiment/node-12-22-0-commonJS/src/cron-job/backup_dotfiles.js --no-autorestart --cron \"*/1 * * * *\""
  output = ""

[[snippets]]
  description = "curl POST w/ JSON data"
  command = "curl -d '{\"key1\":\"value1\", \"key2\":\"value2\"}' -H \"Content-Type: application/json\" -X POST http://localhost:9000/users/1/tasks/transcode"
  output = ""

[[snippets]]
  description = "curl-cheatsheet"
  command = "curl cheat.sh/xargs"
  output = ""

[[snippets]]
  description = "alias edit"
  command = "vi ~/.oh-my-zsh/custom/aliases.zsh"
  output = ""

[[snippets]]
  description = "startship config go in"
  command = "vi ~/.config/starship.toml"
  output = ""

[[snippets]]
  description = "get the current/active network"
  command = "route get default | grep interface | awk '{print $2}'"
  output = ""

[[snippets]]
  description = "path line by line"
  command = "echo $PATH | tr ':' '\\n'"
  output = ""

[[snippets]]
  description = "get active network name"
  command = "networksetup -listallhardwareports | grep -B 1 \"$activeNetwork\" | awk '/Hardware Port/{ print }'|cut -d \" \" -f3-"
  output = ""

[[snippets]]
  description = "timestamp covert to date"
  command = "gdate -d @1674784876"
  output = ""

[[snippets]]
  description = "open chrome default profile"
  command = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --args --profile-directory=Default\\n"
  output = ""

[[snippets]]
  description = "send curl with proxy"
  command = "curl --proxy http://218.250.67.85:80 http://example.com"
  output = ""

[[snippets]]
  description = "measure rate using pv"
  command = "yes | pv -r > /dev/null"
  output = ""

[[snippets]]
  description = "find file with name"
  command = "find ./ -name index.ts"
  output = ""

[[snippets]]
  description = "http error status code"
  command = "curl https://www.iana.org/assignments/http-status-codes/http-status-codes.txt"
  output = ""

[[snippets]]
  description = "check someone(apps) is listning on what ip and port"
  command = "netstat -na | grep LIST"
  output = ""

[[snippets]]
  description = "show all containers (incl. stop ones)"
  command = "docker ps -a"
  output = ""

[[snippets]]
  description = "mimtpoxy wemo1"
  command = "mitmproxy --view-filter \"~d .*\\.wemoscooter\\.com\" --set anticache=true --set anticomp=true --set console_flowlist_layout=list"
  output = ""

[[snippets]]
  description = "base64 encode"
  command = "echo  'linuxhint.com' | base64"
  output = ""

[[snippets]]
  description = "base64 decode"
  command = "echo 'bGludXhoaW50LmNvbQo=' | base64 --decode"
  output = ""

[[snippets]]
  description = "bettercap"
  command = "sudo bettercap -caplet /Users/re4388/bettercap_script/a1.cap"
  output = ""

[[snippets]]
  description = "apache (start, restart, stop)"
  command = "sudo /usr/sbin/apachectl stop"
  output = ""

[[snippets]]
  description = "ai ask"
  command = "ai ask \"show listening port and pid\""
  output = ""

[[snippets]]
  description = "check port listening"
  command = "lsof -i -nP | grep LISTEN"
  output = ""

[[snippets]]
  description = "check pid name"
  command = "ps -p 586 -o comm="
  output = ""

[[snippets]]
  description = "wget download recursivly"
  command = "wget -r https://0af9006504dc264dc0e5271900b3001c.web-security-academy.net/.git"
  output = ""

[[snippets]]
  description = "softlink setup"
  command = "ln -s ~/real_file ~/link_file\\n"
  output = ""

[[snippets]]
  description = "ssh into my acer via private ip"
  command = "ssh re4388@192.168.0.128"
  output = ""

[[snippets]]
  description = "cloud sql proxy for wemo qat"
  command = "./cloud-sql-proxy backend-qat:asia-east1:wemo-qat --port 9432 -g"
  output = ""

[[snippets]]
  description = "CIDR expansion"
  command = "mapcidr -cidr 127.0.0.1/27"
  output = ""

[[snippets]]
  description = "slice cidr into how many cidr count"
  command = "mapcidr -cidr 127.0.0.1/27 -sbc 4 -silent"
  output = ""

[[snippets]]
  description = "ip format"
  command = "echo 127.0.1.0 | mapcidr -if 0 -silent"
  output = ""

[[snippets]]
  description = "slice given CIDR for equal number of host count in each CIDR"
  command = "mapcidr -cidr 173.0.84.0/16 -sbh 20000 -silent"
  output = ""

[[snippets]]
  description = "ip4 -> ip6"
  command = "mapcidr -cl ips.txt -t6"
  output = ""

[[snippets]]
  description = "count number of hosts for a given CIDR"
  command = "echo 173.0.84.0/27 | mapcidr -count -silent"
  output = ""

[[snippets]]
  description = "nmap scan ip range"
  command = "nmap 192.168.254.1-200"
  output = ""

[[snippets]]
  description = "nmap cidar"
  command = "nmap 192.168.254.0/24"
  output = ""

[[snippets]]
  description = "only check host and skip port scan"
  command = "nmap -sP 192.168.254.0/24"
  output = ""

[[snippets]]
  description = "use grep to find command"
  command = "nmap | grep -- -sV"
  output = ""

[[snippets]]
  description = "nmap -v(verbose or use -vv) -A is to show OS and more info"
  command = "nmap -v 192.168.64.6 -A"
  output = ""

[[snippets]]
  description = "use host to resolve via Google's public DNS server"
  command = "host kottos.wemoscooter.com 8.8.8.8"
  output = ""

[[snippets]]
  description = "namp via provided public google dns"
  command = "nmap --dns-servers 8.8.4.4,8.8.8.8 192.168.64.6/24"
  output = ""

[[snippets]]
  description = "nmap -n(no dns, faster), -sn(no port scan), -T5(faster)"
  command = "nmap -vv -n -sn -T5 192.168.64.1/24"
  output = ""

[[snippets]]
  description = "linex ver of \"nc -lp 5001\", no need to use p"
  command = "nc -l 5001"
  output = ""

[[snippets]]
  description = "dec2hex"
  command = "printf '%x\\n' 5002"
  output = ""

[[snippets]]
  description = "hex2dec"
  command = "echo $((0x1389))"
  output = ""

[[snippets]]
  description = "git remove local branch"
  command = "git branch -D qat"
  output = ""

[[snippets]]
  description = "adb push"
  command = "adb push fridascript.js /data/local/tmp "
  output = ""

[[snippets]]
  description = "adb check frida server is running"
  command = "adb shell \"ps | grep frida\""
  output = ""

[[snippets]]
  description = "frida check process via Usb connected"
  command = "frida-ps -U "
  output = ""

[[snippets]]
  description = "adb check device architecture"
  command = "adb shell getprop ro.product.cpu.abi "
  output = ""

[[snippets]]
  description = "adb instell apk"
  command = "adb install app-debug.apk"
  output = ""

[[snippets]]
  description = "abd logcat to get log"
  command = "adb logcat |grep Sum"
  output = ""

[[snippets]]
  description = "andrio remount in shell, use su first"
  command = "andriod remot => mount -o rw,remount /system"
  output = ""

[[snippets]]
  description = "run up frida-server in my a8"
  command = "default frida server: /data/local/tmp/frida-server-16.0.3"
  output = ""

[[snippets]]
  description = "pyenv init"
  command = "eval \"$(pyenv init -)\""
  output = ""

[[snippets]]
  description = "virtualenv deactivate"
  command = "deactivate"
  output = ""

[[snippets]]
  description = "virtualenv setup and put stuff in venv folder"
  command = "virtualenv venv"
  output = ""

[[snippets]]
  description = "virtualenv activatee"
  command = "source venv/bin/activate"
  output = ""

[[snippets]]
  description = "adb check connected device architecture"
  command = "adb shell getprop ro.product.cpu.abi"
  output = ""

[[snippets]]
  description = "start avd api29"
  command = "/Users/re4388/Library/Android/sdk/emulator/emulator -writable-system -netdelay none -netspeed full -avd Pixel-5-API-29"
  output = ""

[[snippets]]
  description = "string2hex"
  command = "hex abc"
  output = ""

[[snippets]]
  description = "hex2string"
  command = "unhex 465249444120726f636b7321"
  output = ""

[[snippets]]
  description = "gcc compile"
  command = "gcc -Wall a4.c -o a4"
  output = ""

[[snippets]]
  description = "frida -f <file_path> and -l <xxx.js>"
  command = "frida -l _agent.js -f ./custom_dll/a4"
  output = ""

[[snippets]]
  description = "gcc create shared xx.so"
  command = "gcc -shared -o libtest.so libtest.c"
  output = ""

[[snippets]]
  description = "see child process give parent process"
  command = "pstree -p 53986"
  output = ""

[[snippets]]
  description = "check port given port"
  command = "lsof -i :8080"
  output = ""

[[snippets]]
  description = "ngrok"
  command = "ngrok http 3000"
  output = ""

[[snippets]]
  description = "diff"
  command = "code --diff a1 a2"
  output = ""
