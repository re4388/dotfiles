[
    // NOTE
    // 1. the global alt and cmd is swapped in karabiner app
    // 2. use alt + left/right for word step move and del
    // 3. use ctrl + left/right for line cur move and del
    /////////////////////////////////////////////////////
    // fix vscode terminal
    // alt here is actually cmd physical key (via karabiner app)
    // ref: https://www.novell.com/documentation/extend5/Docs/help/Composer/books/TelnetAppendixB.html
    // cancel the line/command
    /////////////////////////////////////////////////////
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0003" // ctrl+c
        }
    },
    // recursively show command history
    {
        "key": "alt+r",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0012" // ctrl+r
        }
    },
    {
        "key": "alt+d",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0004" // ctrl+d
        }
    },
    // I disable below to force me to just use alt and ctrl w/ arrow key to move and delete
    // go to the start of the line
    // {
    //     "key": "alt+a",
    //     "command": "workbench.action.terminal.sendSequence",
    //     "when": "terminalFocus",
    //     "args": {
    //         "text": "\u0001" // ctrl+a
    //     }
    // },
    // go to the end of the line
    // {
    //     "key": "alt+e",
    //     "command": "workbench.action.terminal.sendSequence",
    //     "when": "terminalFocus",
    //     "args": {
    //         "text": "\u0005" // ctrl+e
    //     }
    // },
    // remove previous word
    // {
    //     "key": "alt+w",
    //     "command": "workbench.action.terminal.sendSequence",
    //     "when": "terminalFocus",
    //     "args": {
    //         "text": "\u0017" // ctrl+w
    //     }
    // },
    //  exit shell (like used in python)
    // delete to the begin of line
    // {
    //     "key": "alt+u",
    //     "command": "workbench.action.terminal.sendSequence",
    //     "when": "terminalFocus",
    //     "args": {
    //         "text": "\u0015" // ctrl+u
    //     }
    // },
    //////////////////////////////////////////////
    //////// ALT + number key ////////////////////
    //////////////////////////////////////////////
    {
        "key": "alt+0",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+1",
        "command": "whichkey.show"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.quickOpen",
        // "when": "!terminalFocus" // for not conflict w/ `go to end`
    },
    {
        "key": "alt+f",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    // {
    //     "key": "alt+p",
    //     "command": "macros.commentDown"
    // },
    // toggle terminal focus
    {
        "key": "alt+y",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "alt+y",
        "command": "terminal.focus",
        "when": "!terminalFocus"
    },
    // go to def and reference
    {
        "key": "alt+u",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "alt+/",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+i",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "alt+h",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    ////////////// tab to go thru suggestions
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    // go back and forward 
    // {
    //     "key": "cmd+o",
    //     "command": "workbench.action.navigateBack"
    // },
    // {
    //     "key": "cmd+i",
    //     "command": "workbench.action.navigateForward"
    // },
    // region shrink and expend
    {
        "key": "cmd+down",
        "command": "undo_expand_region"
    },
    /////////////////////////////////////////////////////
    ////////////// three 3 combo key /////////////////////
    // select from cur to end/begin
    /////////////////////////////////////////////////////
    {
        "key": "shift+alt+right",
        "command": "cursorLineEndSelect"
    },
    // copy line up and down 
    {
        "key": "cmd+alt+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+alt+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    ////////////// OK TO IGNORE  /////////////////////////
    //////////////////////////////////////////////////////
    ////////////// BELOW ARE REMOVE PART /////////////////
    {
        "key": "alt+down",
        "command": "-notebook.cell.moveDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-notebook.cell.copyUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-notebook.cell.copyDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFile",
        "when": "false"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openLocalFileFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+i",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+down",
        "command": "-scm.forceViewNextCommit",
        "when": "scmRepository"
    },
    {
        "key": "alt+down",
        "command": "-history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+8",
        "command": "gitlens.openWorkingFile"
    },
    {
        "key": "alt+[",
        "command": "-print-it.PrintIt",
        "when": "editorTextFocus"
    },
    //////////////////////////////////
    //  log ext 
    {
        "key": "alt+c",
        "command": "print-it.PrintIt",
        "when": "editorTextFocus" // need this to avoid override terminal alt+c
    },
    // {
    //     "key": "alt+c",
    //     "command": "console.log.wrap.down",
    //     "when": "editorTextFocus"
    // },
    /////////////////////////
    {
        "key": "ctrl+alt+w down",
        "command": "-console.log.wrap.down",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+left",
        "command": "-cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+right",
        "command": "-cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+d",
        "command": "editor.action.revealDefinition"
    },
    {
        "key": "alt+r",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-very-smart-select.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-very-smart-select.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+up",
        "command": "very-smart-select.grow"
    },
    {
        "key": "cmd+down",
        "command": "very-smart-select.shrink"
    },
    {
        "key": "alt+2",
        "command": "editor.action.insertCursorBelow"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-markdown.extension.editing.toggleHeadingUp",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-markdown.extension.editing.toggleHeadingDown",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
        "key": "ctrl+shift+[",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "home",
        "command": "workbench.action.terminal.scrollToTop",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+home",
        "command": "-workbench.action.terminal.scrollToTop",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "end",
        "command": "workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+end",
        "command": "-workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "alt+s",
        "command": "-markdown.extension.editing.toggleStrikethrough",
        "when": "false"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },
    {
        "key": "alt+z",
        "command": "-workbench.action.terminal.sizeToContentWidth",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
    },
    {
        "key": "cmd+k cmd+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "alt+o",
        "command": "-C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "end",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "home",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+up",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "alt+z",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "cmd+m",
        "command": "-markdown.extension.editing.toggleMath",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
        "key": "cmd+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "-markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
        "key": "alt+y",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "explorerViewletFocus"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
        "key": "cmd+i",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+alt+down",
        "command": "-markdown.extension.onCopyLineDown",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
        "key": "shift+alt+up",
        "command": "-markdown.extension.onCopyLineUp",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
    },
    {
        "key": "shift+alt+down",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+down",
        "command": "-cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+up",
        "command": "-cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+s",
        "command": "bookmarks.listFromAllFiles"
    },
    {
        "key": "shift+cmd+t shift+cmd+s",
        "command": "-TS-CheckMyJS.enableTSCheck",
        "when": "editorTextFocus"
    }
]